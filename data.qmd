---
title: Data
description: We describe the sources of our data and the cleaning process.
toc: true
draft: false
editor: Yiqi Jin
---

![](images/data-import-cheatsheet-thumbs.png)


This comes from the file `data.qmd`.

Your first steps in this project will be to find data to work on.

I recommend trying to find data that interests you and that you are knowledgeable about. A bad example would be if you have no interest in video games but your data set is about video games. I also recommend finding data that is related to current events, social justice, and other areas that have an impact.


Initially, you will study _one dataset_ but later you will need to combine that data with another dataset. For this reason, I recommend finding data that has some date and/or location components. These types of data are conducive to interesting visualizations and analysis and you can also combine this data with other data that also has a date or location variable.
Data from the census, weather data, economic data, are all relatively easy to combine with other data with time/location components.


## What makes a good data set?

* Data you are interested in and care about.
* Data where there are a lot of potential questions that you can explore.
* A data set that isn't completely cleaned already.
* Multiple sources for data that you can combine.
* Some type of time and/or location component.


## Where to keep data?


Below 50mb: In `dataset` folder

Above 50mb: In `dataset-ignore` folder which you will have to create manually. This folder will be ignored by `git` so you'll have to manually sync these files across your team.

### Sharing your data


For small datasets (<50mb), you can use the `dataset` folder that is tracked by github. Stage and commit the files just like you would any other file.

For larger datasets, you'll need to create a new folder in the project root directory named `dataset-ignore`. This will be ignored by git (based off the `.gitignore` file in the project root directory) which will help you avoid issues with Github's size limits. Your team will have to manually make sure the data files in `dataset-ignore` are synced across team members.

Your [clean_data.R](/scripts/clean_data.R) file in the `scripts` folder is the file where you will import the raw data that you download, clean it, and write `.rds` file(s) (using `write_rds`) that you'll load in your analysis page. If desirable, you can have multiple scripts that produce different derived data sets, just make sure to link to them on this page.

You should never use absolute paths (eg. `/Users/danielsussman/path/to/project/` or `C:\MA415\\Final_Project\`).
Instead, use the `here` function from the [`here` package](https://here.r-lib.org/articles/here.html) to avoid path problems.

### Clean data script

The idea behind this file is that someone coming to your website could largely replicate your analyses after running this script on the original data sets to clean them.
This file might create a derivative data set that you then use for your subsequent analysis.
Note that you don't need to run this script from every post/page.
Instead, you can load in the results of this script, which will usually be `.rds` files. In your data page you'll describe how these results were created. If you have a very large data set, you might save smaller data sets that you can use for exploration purposes.
To link to this file, you can use `[cleaning script](/scripts/clean_data.R)` wich appears as [cleaning script](/scripts/clean_data.R). 

----

## Rubric: On this page

You will

* Describe where/how to find data.
  * You must include a link to the original data source(s). Make sure to provide attribution to those who collected the data.
  * Why was the data collected/curated? Who put it together? (This is important, if you don't know why it was collected then that might not be a good dataset to look at.
* Describe the different data files used and what each variable means. 
  * If you have many variables then only describe the most relevant ones, possibly grouping together variables that are similar, and summarize the rest.
  * Use figures or tables to help explain the data. For example, showing a histogram or bar chart for a particularly important variable can provide a quick overview of the values that variable tends to take.
* Describe any cleaning you had to do for your data.
  * You *must* include a link to your `clean_data.R` file.
  * Rename variables and recode factors to make data more clear.
  * Also, describe any additional R packages you used outside of those covered in class.
  * Describe and show code for how you combined multiple data files and any cleaning that was necessary for that.
  * Some repetition of what you do in your `clean_data.R` file is fine and encouraged if it helps explain what you did.
* Organization, clarity, cleanliness of the page
  * Make sure to remove excessive warnings, use clean easy-to-read code (without side scrolling), organize with sections, use bullets and other organization tools, etc.
  * This page should be self-contained.



## Data Source

### Data Set 1: IPUMS USA (Primary Dataset)

The dataset used in this project comes from [IPUMS USA](https://usa.ipums.org/usa/), maintained by the Minnesota Population Center at the University of Minnesota. IPUMS provides harmonized microdata from the U.S. Census and American Community Survey (ACS), enabling consistent analysis across time and population groups.

We use data from the **2023 American Community Survey (ACS, 1-Year Sample)**, which includes detailed individual and household-level information on demographics, income, and housing characteristics across the United States.

- **Data access**: [IPUMS USA Extract System](https://usa.ipums.org/usa-action/samples)  
- **Data provider**: Minnesota Population Center, University of Minnesota  
- **Purpose of collection**: To inform public policy, federal resource allocation, and academic research by providing annual data on the U.S. population.

### Data Set 2: Housing Prices (Kaggle)

The second dataset used in this project comes from [Kaggle](https://www.kaggle.com/datasets/yasserh/housing-prices-dataset), and contains housing sale prices and property-level attributes from a U.S. housing market. It is often used for machine learning and regression exercises, and provides detailed housing features that complement our demographic-based IPUMS data.

This dataset allows us to explore how individual housing characteristics correlate with price, and can be used to contrast market-based housing valuation with self-reported housing values in the ACS data.

- **Data access**: [Kaggle Housing Prices Dataset](https://www.kaggle.com/datasets/yasserh/housing-prices-dataset)  
- **Data provider**: Yasser Hatab via Kaggle  
- **Purpose of collection**: To predict housing prices based on physical features of the house, useful for regression, modeling, and comparative analysis with IPUMS-based household-level housing value.

---

### Variables used in Data Set 1

We focus on variables relevant to housing and income:

- `YEAR`: Survey year (2023 for all observations).
- `STATEICP`: State identifier based on IPUMS codes.
- `ACREHOUS`: Lot size where the housing unit is located (1 = less than 1 acre, 2 = 1 acre or more).
- `VALUEH`: Estimated market value of owner-occupied housing units (in USD).
- `RACE`: Broad race category of the respondent.
- `FTOTINC`: Total family income, including all sources (in USD).

> Note: The variable `RENT` was removed during data cleaning, as it was nearly always zero and not relevant for our analysis of owner-occupied housing units.

## Variable Description

We selected a subset of variables from the IPUMS data that are relevant to income and housing. The table below summarizes each variable and its key characteristics:

| Variable | Description | Values / Notes |
|----------|-------------|----------------|
| YEAR | Survey year | All are 2023 |
| STATEICP | State code (IPUMS format) | 1–82, e.g., 01 = Connecticut |
| ACREHOUS | Lot size (binary after recoding) | 0 = <10 acres, 1 = ≥10 acres |
| VALUEH | Value of owned home (USD) | Excludes top-coded 9999999 |
| RACE | Broad race category | Integer codes (see below) |
| FTOTINC | Total family income (USD) | Excludes 0 and 9999999 |

We did not rename variables but recoded `ACREHOUS` into a binary indicator to simplify analysis.

### RACE Codes

The `RACE` variable uses the following codes (abridged):

- 1 = White  
- 2 = Black or African American  
- 3 = American Indian or Alaska Native  
- 4 = Chinese  
- 5 = Japanese  
- 6 = Other Asian or Pacific Islander  
- 8 = Two major races  
- 9 = Three or more major races


## Data Cleaning

The full data cleaning process is documented in our [cleaning script](/scripts/housing_clean.R). We used `dplyr` to filter, recode, and remove unnecessary variables from the raw dataset.

The following steps were taken:

- We removed all observations with invalid or topcoded values:
  - `STATEICP > 82` (invalid state codes)
  - `ACREHOUS == 0` (unknown lot size)
  - `VALUEH == 9999999` and `FTOTINC == 9999999` (topcoded values)
- We removed unused or uninformative variables:
  - `RENT`, which was almost entirely zeros and not relevant to our analysis
  - `RACED`, a more detailed race variable we chose not to use
- We recoded `ACREHOUS` to a binary variable:
  - `1` (less than 1 acre) was recoded to `0`
  - `2` (1 acre or more) was recoded to `1`

The cleaned dataset was saved as an `.rds` file and is used throughout the analysis.

We used the `dplyr` package from the `tidyverse` for all transformations.

